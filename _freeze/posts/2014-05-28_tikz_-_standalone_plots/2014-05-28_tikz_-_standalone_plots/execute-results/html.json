{
  "hash": "601ee11775fb61016bf102949a793b96",
  "result": {
    "markdown": "---\ntitle: \"TikzDevice tutorial III: standalone plots\"\ndescription: |\n  Quick and dirty test for knitr boostrap framework. \ndate: 05-28-2014\nauthor:\n  - name: Joseph V. Casillas \n    url: https://www.jvcasillas.com\n    affiliation: Rutgers University\n    affiliation_url: https://www.rutgers.edu\nbase_url: http://www.jvcasillas.com\ncategories: [ipa, r, research, latex]\ntwitter:\n  creator: \"@jvcasill\"\nengine: knitr\nimage: \"image.jpg\"\n---\n\n\n\n\nIn this post I'm going to show you how to use `tikzDevice` to create high quality plots that use the same font as your $\\LaTeX$ document. \nI'm assuming that you have already installed `tikz`. \nIf not, see [part I][part I] in this series. \nMoreover, this tutorial assumes that you have set up your project in the same way outlined in [part II][part II]. \nAn added benefit to this approach is that it allows you to insert IPA symbols into the plot via the `tipa` package.  \n\n#### The LaTeX file\n\nOk. \nYou should start with a $\\LaTeX$ file that looks like this:\n\n```\n\\documentclass{article}\n\\usepackage{tikz}\n\\usepackage{tipa}\n\n\\begin{document}\n\n<<>>=\nrequire(tikzDevice)\ntikz('plot.tex', standAlone=TRUE)\nlibrary(stats)\nplot(cars)\nlines(lowess(cars))\ndev.off()\n@\n\n\\end{document}\n```\n\nIf you have experience working with $\\LaTeX$, the preamble should be pretty straightforward (If you need a quick primer on $\\LaTeX$, see this tutorial).\nThe important part so far is that you have to include `\\usepackage{tikz}` and `\\usepackage{tipa}` *before* `\\begin{document}`. \n\n#### The R code\n\nIn `knitr`, R code goes between `<<>>=` and ends with `@`. \nSo all of this is R code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(tikzDevice)\ntikz('plots/cars-plot.tex', standAlone=TRUE)\nlibrary(stats)\nplot(cars)\nlines(lowess(cars))\ndev.off()\n```\n:::\n\n\nThe command `require(tikzDevice)` loads tikz into the R workspace. \nThen, `tikz('plots/cars-plot.tex', standAlone=TRUE)` calls the tikz device and creates the file `cars-plot.tex` in the folder `plots`. \nIt is important to set `standAlone` to `TRUE` if you want to have a separate .tex file (this is what allows us to keep the fonts the same as the rest of the document). \nFrom this point on until the call `dev.off()`, we enter what we want to appear in our .tex file. \nIn this case I have plotted the typical `cars` data from the library `stats`. \nHere is the PDF output produced when `cars-plot.tex` is compiled. \nNotice the font is different from what you typical get in R. \n\n<img width=\"100%\" src=\"assets/img/plot.png\">\n\nNow let's try something a little more involved and add some IPA. \nI will use a fake dataset and load it into R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_data <- read.delim(\"assets/my_data.txt\")\n```\n:::\n\n    \nWe will use ggplot2 for this plot. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n\nNow we will call tikz device.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(tikzDevice)\noptions(tikzLatexPackages = c(getOption(\"tikzLatexPackages\"), \"\\\\usepackage{tipa}\"))\ntikz('plots/ipa_plot.tex', standAlone=TRUE, width=10, height=6)\nmy_data$group <- factor(my_data$group, levels = c(\"EL\", \"NE\", \"LL\"))\ndf<-with(my_data, aggregate(fpro, list(group=group, fstim=fstim), mean))\ndf$se<-with(my_data, aggregate(fpro, list(group=group, fstim=fstim), function(x) sd(x)/sqrt(10)))[,3]\ngp <- ggplot(df, aes(x=fstim, y=x, colour=group, ymin=x-se, ymax=x+se))\ngp + geom_line(aes(linetype=group), size = .5) + \n    geom_point(aes(shape=group)) + \n    geom_ribbon(alpha = 0.15, linetype=0) + \n    ylim(0, 1) + \n    scale_x_continuous(breaks=seq(0, 10, by=1)) +\n    labs(list(title = \"[\\\\textesh ip/\\\\textesh\\\\textsci p]\", \n            x = \"Stimuli\", y = \"\\\\% [\\\\textesh\\\\textsci p]\")) +\n    theme_bw() +\n    theme(legend.background = element_rect(colour = 'grey50', \n        fill = 'grey97', size = .75, linetype='solid')) +\n    scale_linetype_discrete(\"Group\") +\n    scale_shape_discrete(\"Group\") +\n    scale_colour_discrete(\"Group\")\ndev.off()\n```\n:::\n\n\nNotice that after the `require(tikzDevice)` call, we included \n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(tikzLatexPackages = c(getOption(\"tikzLatexPackages\"), \"\\\\usepackage{tipa}\")) \n```\n:::\n\n\nThe key component here is `\\\\usepackage{tipa}`. \nThis means that tipa will be included in the .tex produced from the code, which, in turn, means that we can include IPA sybols in the plot before it is produced. \nThe `tikz('plots/ipa_plot.tex', standAlone=TRUE, width=5, height=5)` call creates `ipa_plot.tex` in the folder `plots`. \nThe rest of the code (up to `dev.off()`) is the actual plot. \nNotice that we have included ipa in the following command:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlabs(list(title = \"[\\\\textesh ip/\\\\textesh\\\\textsci p]\", \n          x = \"Stimuli\", y = \"\\\\% [\\\\textesh\\\\textsci p]\"))\n```\n:::\n\n\nThis is the plot that is produced when the resulting .tex file is compiled:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](assets/img/ipa_plot.png){width=100%}\n:::\n:::\n\n\nAnd that's it. \nWe have produced a beautiful plot that uses the same font as our document and includes IPA symbols. \nYou can download all the files [here][here] and try it yourself.\n\n[part I]: /blog/2013-05-11_tikz_-_installation/index.html\n[part II]: /blog/2013-05-17_tikz_-_projects/index.html\n[here]: assets/files/master.zip\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}